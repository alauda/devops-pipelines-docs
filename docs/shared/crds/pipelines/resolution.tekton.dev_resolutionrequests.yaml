---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: resolutionrequests.resolution.tekton.dev
spec:
  group: resolution.tekton.dev
  names:
    kind: ResolutionRequest
    listKind: ResolutionRequestList
    plural: resolutionrequests
    singular: resolutionrequest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ResolutionRequest is an object for requesting the content of
          a Tekton resource like a pipeline.yaml.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the information for the request part of the resource
              request.
            properties:
              params:
                additionalProperties:
                  type: string
                description: |-
                  Parameters are the runtime attributes passed to
                  the resolver to help it figure out how to resolve the
                  resource being requested. For example: repo URL, commit SHA,
                  path to file, the kind of authentication to leverage, etc.
                type: object
            type: object
          status:
            description: |-
              Status communicates the state of the request and, ultimately,
              the content of the resolved resource.
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations is additional Status fields for the Resource to save some
                  additional State as well as convey more information to the user. This is
                  roughly akin to Annotations on any k8s resource, just the reconciler conveying
                  richer information outwards.
                type: object
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: |-
                    Condition defines a readiness condition for a Knative resource.
                    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time the condition transitioned from one status to another.
                        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              data:
                description: |-
                  Data is a string representation of the resolved content
                  of the requested resource in-lined into the ResolutionRequest
                  object.
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration is the 'Generation' of the Service that
                  was last processed by the controller.
                format: int64
                type: integer
              refSource:
                description: |-
                  RefSource is the source reference of the remote data that records where the remote
                  file came from including the url, digest and the entrypoint.
                properties:
                  digest:
                    additionalProperties:
                      type: string
                    description: |-
                      Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                      Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                    type: object
                  entryPoint:
                    description: |-
                      EntryPoint identifies the entry point into the build. This is often a path to a
                      build definition file and/or a target label within that file.
                      Example: "task/git-clone/0.8/git-clone.yaml"
                    type: string
                  uri:
                    description: |-
                      URI indicates the identity of the source of the build definition.
                      Example: "https://github.com/tektoncd/catalog"
                    type: string
                type: object
            required:
            - data
            - refSource
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          ResolutionRequest is an object for requesting the content of
          a Tekton resource like a pipeline.yaml.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the information for the request part of the resource
              request.
            properties:
              params:
                description: |-
                  Parameters are the runtime attributes passed to
                  the resolver to help it figure out how to resolve the
                  resource being requested. For example: repo URL, commit SHA,
                  path to file, the kind of authentication to leverage, etc.
                items:
                  description: Param declares an ParamValues to use for the parameter
                    called name.
                  properties:
                    name:
                      type: string
                    value:
                      description: |-
                        ParamValue is a type that can hold a single string, string array, or string map.
                        Used in JSON unmarshalling so that a single JSON field can accept
                        either an individual string or an array of strings.
                      properties:
                        arrayVal:
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        objectVal:
                          additionalProperties:
                            type: string
                          type: object
                        stringVal:
                          type: string
                        type:
                          description: |-
                            ParamType indicates the type of an input parameter;
                            Used to distinguish between a single string and an array of strings.
                          type: string
                      type: object
                  required:
                  - name
                  - value
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              url:
                description: |-
                  URL is the runtime url passed to the resolver
                  to help it figure out how to resolver the resource being
                  requested.
                  This is currently at an ALPHA stability level and subject to
                  alpha API compatibility policies.
                type: string
            type: object
          status:
            description: |-
              Status communicates the state of the request and, ultimately,
              the content of the resolved resource.
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations is additional Status fields for the Resource to save some
                  additional State as well as convey more information to the user. This is
                  roughly akin to Annotations on any k8s resource, just the reconciler conveying
                  richer information outwards.
                type: object
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: |-
                    Condition defines a readiness condition for a Knative resource.
                    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time the condition transitioned from one status to another.
                        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              data:
                description: |-
                  Data is a string representation of the resolved content
                  of the requested resource in-lined into the ResolutionRequest
                  object.
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration is the 'Generation' of the Service that
                  was last processed by the controller.
                format: int64
                type: integer
              refSource:
                description: |-
                  RefSource is the source reference of the remote data that records the url, digest
                  and the entrypoint.
                properties:
                  digest:
                    additionalProperties:
                      type: string
                    description: |-
                      Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                      Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                    type: object
                  entryPoint:
                    description: |-
                      EntryPoint identifies the entry point into the build. This is often a path to a
                      build definition file and/or a target label within that file.
                      Example: "task/git-clone/0.8/git-clone.yaml"
                    type: string
                  uri:
                    description: |-
                      URI indicates the identity of the source of the build definition.
                      Example: "https://github.com/tektoncd/catalog"
                    type: string
                type: object
              source:
                description: 'Deprecated: Use RefSource instead'
                properties:
                  digest:
                    additionalProperties:
                      type: string
                    description: |-
                      Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                      Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                    type: object
                  entryPoint:
                    description: |-
                      EntryPoint identifies the entry point into the build. This is often a path to a
                      build definition file and/or a target label within that file.
                      Example: "task/git-clone/0.8/git-clone.yaml"
                    type: string
                  uri:
                    description: |-
                      URI indicates the identity of the source of the build definition.
                      Example: "https://github.com/tektoncd/catalog"
                    type: string
                type: object
            required:
            - data
            - refSource
            - source
            type: object
        type: object
    served: true
    storage: false
